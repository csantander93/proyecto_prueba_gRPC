syntax = "proto3";

package cadena;

// Mensajes que representan nuestras entidades
message Cadena {
    int32 id_cadena = 1;
    string nombre = 2;
}

message Producto {
    int32 id_producto = 1;
    string nombre = 2;
    string codigo = 3; // Código único de 10 caracteres
    string talle = 4;
    string foto = 5;
    string color = 6;
    map<string, int32> stock = 7; // Mapeo por color y talle
}

message Tienda {
    int32 id_tienda = 1;
    string codigo = 2; // Código alfanumérico
    string nombre = 3;
    string direccion = 4;
    string ciudad = 5;
    string provincia = 6;
    bool habilitada = 7; // Habilitar/Deshabilitar
    bool casa_central = 8;
    int32 cadena_id_cadena = 9;
}

message Usuario {
    int32 id_usuario = 1;
    string username = 2;
    string password = 3;
    bool habilitado = 4; // Habilitado/Deshabilitado
    int32 tienda_idtienda = 5; // Puede ser ID de tienda o 0 para casa central
    string nombre = 6;
    string apellido = 7;
}

// Mensajes adicionales
message Empty {}

message CadenaId {
    int32 id = 1;
}

message ProductoId {
    int32 id = 1;
}

message TiendaId {
    int32 id = 1;
}

message UsuarioId {
    int32 id = 1;
}

message CadenasList {
    repeated Cadena cadenas = 1;
}

message ProductosList {
    repeated Producto productos = 1;
}

message TiendasList {
    repeated Tienda tiendas = 1;
}

message UsuariosList {
    repeated Usuario usuarios = 1;
}

// Servicios de gRPC
service CadenaService {
    rpc GetCadena(CadenaId) returns (Cadena);
    rpc CreateCadena(Cadena) returns (Cadena);
    rpc DeleteCadena(CadenaId) returns (Empty);
    rpc ListCadenas(Empty) returns (CadenasList);
}

service ProductoService {
    rpc GetProducto(ProductoId) returns (Producto);
    rpc CreateProducto(Producto) returns (Producto);
    rpc UpdateProducto(Producto) returns (Producto);
    rpc ListProductos(Empty) returns (ProductosList);
}

service TiendaService {
    rpc GetTienda(TiendaId) returns (Tienda);
    rpc CreateTienda(Tienda) returns (Tienda);
    rpc DeleteTienda(TiendaId) returns (Empty);
    rpc ListTiendas(Empty) returns (TiendasList);
}

service UsuarioService {
    rpc GetUsuario(UsuarioId) returns (Usuario);
    rpc CreateUsuario(Usuario) returns (Usuario);
    rpc UpdateUsuario(Usuario) returns (Usuario);
    rpc DeleteUsuario(UsuarioId) returns (Empty);
    rpc ListUsuarios(Empty) returns (UsuariosList);
}

// Métodos para modificar stock
service StockService {
    rpc UpdateStock(Producto) returns (Producto); // Para modificar stock
}
